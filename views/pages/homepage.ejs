<!-- The search container div. Displayed at initial page load    -->
<div id="search-container">
  <input id="input-elem" class="form-control form-control-lg" type="text" placeholder="Please enter the keyword here..">
  <button id="search-btn" class="btn btn-outline-primary">Search</button>
</div>

<!-- The loader container div. Displayed during the time taken to complete the API call   -->
<div id="loader-container" hidden>
  <h2>Fetching articles, please wait</h2>
  <div class="loader"></div>
</div>

<!-- The news container div. Displayed after the API has returned its response   -->
<div id="news-container-parent" hidden>
  <i id="back-button" class="fa fa-2x fa-arrow-left"></i>
  <div id="news-container">
  </div>
</div>

<style>
  .btn {
    color: #0f4c81;
    border-color: #0f4c81;
  }

  .btn:hover {
    background-color: #0f4c81;
    color: white;
  }



  /* Safari */
  @-webkit-keyframes spin {
    0% {
      -webkit-transform: rotate(0deg);
    }

    100% {
      -webkit-transform: rotate(360deg);
    }
  }

  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }

    100% {
      transform: rotate(360deg);
    }

  }

  /* Extra small devices (phones, 600px and down) */
  @media only screen and (max-width: 817px) {

    .news-card {
      width: 80% !important;
      margin: 5% auto;
    }

    #search-container {
      top: 40%;
      left: 5%;
      position: absolute;
      width: 90%;
    }

    #search-btn {
      border-radius: 25px;
      margin: 20px auto;
      width: 40%;
      min-width: 200px;
    }

    #news-container {
      margin: 5% auto;
    }

    #input-elem {
      border-radius: 25px;
    }

    #back-button {
      margin: 20px;
      cursor: pointer;
    }
  }


  /* Medium devices (landscape tablets, 768px and up) */
  @media only screen and (min-width: 818px) {

    #search-container {
      top: 50%;
      left: 15%;
      position: absolute;
      width: 70%;
      display: flex;
      align-items: baseline;
    }

    #news-container {
      margin: 5% auto;
    }

    #search-btn {
      border-radius: 25px;
      margin-left: 20px;
      width: 20%;
    }

    #input-elem {
      border-radius: 25px;
    }

    .news-card {
      display: flex !important;
      width: 80% !important;
      margin: 20px auto;
      flex-direction: row;
      box-sizing: border-box;
    }

    .card-img-top {
      height: 200px;
      width: 300px;
      object-fit: cover;
    }

    .card-body {
      display: flex;
      flex-direction: column;
      box-sizing: border-box;
    }

    #view-article-btn {
      align-self: flex-end;
    }

    #back-button {
      margin: 20px;
      cursor: pointer;
    }

    .loader {
      border: 16px solid #f3f3f3;
      border-radius: 50%;
      border-top: 16px solid #0f4c81;
      width: 120px;
      height: 120px;
      margin: 50px auto;
      -webkit-animation: spin 2s linear infinite;
      animation: spin 2s linear infinite;
    }

    #loader-container {
      margin: 15% auto;
      width: 30%;
    }

    .truncate {
      width: 250px;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }

  }

  /* Large devices (laptops/desktops, 992px and up) */
  @media only screen and (min-width: 1190px) {
    #search-container {
      top: 50%;
      left: 30%;
      position: absolute;
      width: 40%;
      display: flex;
      align-items: baseline;
    }

    #news-container {
      margin: 5% auto;
    }

    #search-btn {
      border-radius: 25px;
      margin-left: 20px;
      width: 20%;
    }

    #input-elem {
      border-radius: 25px;
    }

    .news-card {
      display: flex !important;
      width: 600px;
      margin: 20px auto;
      flex-direction: row;
      box-sizing: border-box;
    }

    .card-img-top {
      height: 200px;
      width: 400px;
      object-fit: cover;
    }

    .card-body {
      display: flex;
      flex-direction: column;
      box-sizing: border-box;
    }

    #view-article-btn {
      align-self: flex-end;
    }

    #back-button {
      margin: 20px;
      cursor: pointer;
    }

    .loader {
      border: 16px solid #f3f3f3;
      border-radius: 50%;
      border-top: 16px solid #0f4c81;
      width: 120px;
      height: 120px;
      margin: 50px auto;
      -webkit-animation: spin 2s linear infinite;
      animation: spin 2s linear infinite;
    }

    #loader-container {
      margin: 15% auto;
      width: 30%;
    }

    .truncate {
      width: auto;
      white-space: pre-wrap;
      overflow: visible;
      text-overflow: ellipsis;
    }
  }
</style>

<script>

  const FETCH_NEWS_API_ENDPOINT = '/fetch-news';

  const showNews = () => {
    const inputElem = document.getElementById('input-elem');
    const queryString = inputElem.value;


    //Perform queryOperation only if queryString is non-empty
    if (queryString !== "") {
      //The value of the searchBox is emptied after fetching its value
      inputElem.value = "";

      const loaderContainer = document.getElementById('loader-container');
      const searchContainer = document.getElementById('search-container');

      //The search container is made hidden and the loader container is displayed instead.
      loaderContainer.hidden = false;
      searchContainer.hidden = true;

      //Construct the query object for API call
      const queryObj = {
        queryString: queryString
      }

      //Making a post request to the API inorder to fetch the news articles
      axios.post(FETCH_NEWS_API_ENDPOINT, queryObj)
        .then(({ data }) => {
          //Check if the API returned success.
          if (data.success) {
            //Articles array is stored into articles
            const articles = data.data.articles;

            const newsContainer = document.getElementById('news-container');
            const newsContainerParent = document.getElementById('news-container-parent');

            //Loader container is made hidden and the news container is made visible.
            newsContainerParent.hidden = false;
            loaderContainer.hidden = true;

            //If no articles was returned, show No results found
            //Else dynamically populate the news articles into cards.
            if (!articles.length) {
              newsContainer.innerHTML = '<h1 style="text-align:center;">No results found</h1>';
            } else {
              for (let article of articles) {
                const descriptionTruncateLimiter = article.description.length < 150 ? article.description.length : 150;
                newsContainer.innerHTML += `<div class="card news-card">
                                            <div>
                                              <img class="card-img-top" src="${article.urlToImage}"
                                                alt="Card image cap">
    
                                            </div>
                                            <div class="card-body">
                                              <h5 class="card-title">${article.title}</h5>
                                              <p class="card-text truncate">${article.description.substring(0, descriptionTruncateLimiter).concat('....')}</p>
                                              <a id="view-article-btn" href="${article.url}" class="btn btn-outline-primary" target="_blank">View Article</a>
                                            </div>
                                          </div>`;
              }

            }
          }
        }).catch(err => console.log(err));
    }
  }

  const showSearch = () => {
    //This function is triggered when the back button is clicked.
    //Hides the news container and displays back the search container.
    const searchContainer = document.getElementById('search-container');
    const newsContainer = document.getElementById('news-container');
    const newsContainerParent = document.getElementById('news-container-parent');
    searchContainer.hidden = false;
    newsContainerParent.hidden = true;
    newsContainer.innerHTML = "";
  }

  //When back button is clicked, show the serach page
  document.getElementById('back-button').onclick = showSearch;

  //When serach button is clicked trigger the showNews() function.
  document.getElementById('search-btn').onclick = showNews;

  //When enter key is pressed, trigger the showNews() function/
  document.addEventListener('keyup', (event) => {
    if (event.keyCode === 13) {
      showNews();
    }
  });

</script>